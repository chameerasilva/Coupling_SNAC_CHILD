##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~##
## Copyright (C), 2003, Victorian Partnership for Advanced Computing (VPAC) Ltd, 110 Victoria Street, Melbourne, 3053, Australia.
##
## Authors:
##      Stevan M. Quenette, Senior Software Engineer, VPAC. (steve@vpac.org)
##      Patrick D. Sunter, Software Engineer, VPAC. (pds@vpac.org)
##      Luke J. Hodkinson, Computational Engineer, VPAC. (lhodkins@vpac.org)
##      Siew-Ching Tan, Software Engineer, VPAC. (siew@vpac.org)
##      Alan H. Lo, Computational Engineer, VPAC. (alan@vpac.org)
##      Raquibul Hassan, Computational Engineer, VPAC. (raq@vpac.org)
##
##  This library is free software; you can redistribute it and/or
##  modify it under the terms of the GNU Lesser General Public
##  License as published by the Free Software Foundation; either
##  version 2.1 of the License, or (at your option) any later version.
##
##  This library is distributed in the hope that it will be useful,
##  but WITHOUT ANY WARRANTY; without even the implied warranty of
##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
##  Lesser General Public License for more details.
##
##  You should have received a copy of the GNU Lesser General Public
##  License along with this library; if not, write to the Free Software
##  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
##
## $Id: Makefile.vmake 2586 2005-01-28 00:08:55Z AlanLo $
##
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.PHONY: check patchtests

DUMP_VARS_TO_TMP_FILE = \
	echo "PROJ_ROOT=\"${PROJ_ROOT}\"" > tmp.sh; \
	echo "export PROJ_ROOT" >> tmp.sh; \
	echo "BLD_DIR=\"${BLD_DIR}\"" >> tmp.sh; \
	echo "export BLD_DIR" >> tmp.sh; \
	echo "TMP_DIR=\"${TMP_DIR}\"" >> tmp.sh; \
	echo "export TMP_DIR" >> tmp.sh; \
	echo "BIN_DIR=\"${BIN_DIR}\"" >> tmp.sh; \
	echo "export BIN_DIR" >> tmp.sh; \
	echo "LIB_DIR=\"${LIB_DIR}\"" >> tmp.sh; \
	echo "export LIB_DIR" >> tmp.sh; \
	echo "INC_DIR=\"${INC_DIR}\"" >> tmp.sh; \
	echo "export INC_DIR" >> tmp.sh; \
	echo "PYB_DIR=\"${PYB_DIR}\"" >> tmp.sh; \
	echo "export PYB_DIR" >> tmp.sh; \
	echo "PYC_DIR=\"${PYC_DIR}\"" >> tmp.sh; \
	echo "export PYC_DIR" >> tmp.sh; \
	echo "TST_DIR=\"${TST_DIR}\"" >> tmp.sh; \
	echo "export TST_DIR" >> tmp.sh; \
	echo "PATH=\"${BIN_DIR}:${PATH}\"" >> tmp.sh; \
	echo "export PATH" >> tmp.sh; \
	echo "LD_LIBRARY_PATH=\"${LIB_DIR}:${LD_LIBRARY_PATH}\"" >> tmp.sh; \
	echo "export LD_LIBRARY_PATH" >> tmp.sh; \
	echo "DYLD_LIBRARY_PATH=\"${LIB_DIR}:${DYLD_LIBRARY_PATH}\"" >> tmp.sh; \
	echo "export DYLD_LIBRARY_PATH" >> tmp.sh; \
	echo "PYTHONPATH=\"${PYC_DIR}:${PYB_DIR}:${PYTHONPATH}\"" >> tmp.sh; \
	echo "export PYTHONPATH" >> tmp.sh; \
	echo "MPI_DIR=\"${MPI_DIR}\"" >> tmp.sh; \
	echo "export MPI_DIR" >> tmp.sh; \
	echo "MPI_BINDIR=\"${MPI_BINDIR}\"" >> tmp.sh; \
	echo "export MPI_BINDIR" >> tmp.sh; \
	echo "MPI_LIBDIR=\"${MPI_LIBDIR}\"" >> tmp.sh; \
	echo "export MPI_LIBDIR" >> tmp.sh; \
	echo "MPI_INCDIR=\"${MPI_INCDIR}\"" >> tmp.sh; \
	echo "export MPI_INCDIR" >> tmp.sh; \
	echo "MPI_RUN=\"${MPI_RUN}\"" >> tmp.sh; \
	echo "export MPI_RUN" >> tmp.sh; \
	echo "MPI_NPROC=\"${MPI_NPROC}\"" >> tmp.sh; \
	echo "export MPI_NPROC" >> tmp.sh; \
	echo "REGRESSTOR_URL=\"${REGRESSTOR_URL}\"" >> tmp.sh; \
	echo "export REGRESSTOR_URL" >> tmp.sh;

ifeq (0,${MAKELEVEL})
	export CURRDATE_TIME := $(shell date +%F_%R)
	export PASSTOTALFILE := ${TMP_DIR}/passtotal.${CURRDATE_TIME}.txt
	export FAILTOTALFILE := ${TMP_DIR}/failtotal.${CURRDATE_TIME}.txt
endif

check: ${PRE_MAKE_check} ${SUBDIRS} ${CHECKS} ${POST_MAKE_check}
	@if test ! -f ${PASSTOTALFILE}; then \
		echo "0" | cat > ${PASSTOTALFILE}; \
		echo "0" | cat > ${FAILTOTALFILE}; \
	fi; \
	$(DUMP_VARS_TO_TMP_FILE) \
	if test ! "${RUNID}x" = "x"; then \
		echo "RUNID=${RUNID}" >> tmp.sh; \
		echo "export RUNID" >> tmp.sh; \
		echo "REGRESSION_RUN=1" >> tmp.sh; \
		echo "export REGRESSION_RUN" >> tmp.sh; \
	fi; \
	list='${CHECKS}'; \
	for i in $$list; do \
		if test "x$$i" != "x"; then \
			if ${SH} ./$$i; then \
				expr `cat ${PASSTOTALFILE}` + 1 > ${PASSTOTALFILE}; \
			else \
				expr `cat ${FAILTOTALFILE}` + 1 > ${FAILTOTALFILE}; \
			fi; \
		fi; \
	done; \
	rm tmp.sh; \
	if test ${MAKELEVEL} = 0; then \
		echo "--------------------------------------------"; \
		echo "Summary of results:"; \
		echo "Passes = `cat ${PASSTOTALFILE}`"; \
		echo "Fails = `cat ${FAILTOTALFILE}`"; \
		rm -f ${PASSTOTALFILE} ${FAILTOTALFILE}; \
	fi;

patchtests: ${SUBDIRS} ${PATCH_TESTS}

check-help: help-title check-command-header
	@echo "Runs all unit & system tests in sub and current directories"
	@echo "If run_long_checks is enabled, long_checks are also included as well"
	@echo "Tests are shell scripts that results in pass, "
	@echo "diff (difference in expected result) and error (program error)"
	@echo ""
	@echo "All tests listed in the 'checks' variable in a directory are executed"

COMMAND_HELP += check-help

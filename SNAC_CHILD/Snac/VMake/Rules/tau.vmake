##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~##
## Copyright (C), 2003, Victorian Partnership for Advanced Computing (VPAC) Ltd, 110 Victoria Street, Melbourne, 3053, Australia.
##
## Authors:
##      Stevan M. Quenette, Senior Software Engineer, VPAC. (steve@vpac.org)
##      Patrick D. Sunter, Software Engineer, VPAC. (pds@vpac.org)
##      Luke J. Hodkinson, Computational Engineer, VPAC. (lhodkins@vpac.org)
##      Siew-Ching Tan, Software Engineer, VPAC. (siew@vpac.org)
##      Alan H. Lo, Computational Engineer, VPAC. (alan@vpac.org)
##      Raquibul Hassan, Computational Engineer, VPAC. (raq@vpac.org)
##
##  This library is free software; you can redistribute it and/or
##  modify it under the terms of the GNU Lesser General Public
##  License as published by the Free Software Foundation; either
##  version 2.1 of the License, or (at your option) any later version.
##
##  This library is distributed in the hope that it will be useful,
##  but WITHOUT ANY WARRANTY; without even the implied warranty of
##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
##  Lesser General Public License for more details.
##
##  You should have received a copy of the GNU Lesser General Public
##  License along with this library; if not, write to the Free Software
##  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
##
## $Id: tau.vmake 2586 2005-01-28 00:08:55Z AlanLo $
##
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

## Scope	: Public
## Role		: Adds the TAU instrumentation phase before compilation to allow TAU profiling

ifeq (${USE_PDT}${USE_TAU},11)
	# TAU instrumentation is only activated if both pdt and tau options are selected
	export USE_PDTTAU := 1

	# This flag is known to be required on linux platforms
	PROJ_CFLAGS += -D__CHECKER__
	
	packages := TAU ${packages}
	
	ifneq (${SRCS},)
		PDT_TMP := $(subst .c,.pdb, $(filter .c,${SRCS}))	# pdb file for each source
		TAU_TMP := $(subst .c,-inst.c, $(filter .c,${SRCS}))	# instrumentation for each source

		INTERMEDIATE_FILES += ${PDT_TMP} ${TAU_TMP}
		
		# Replace the usual source code with instrumented equivalents
		SRCS := $(subst .c,-inst.c, ${SRCS})
	endif

	RM_LIST_TEMPS += ${PDT_TMP} ${TAU_TMP}
	

### Rules ###

%.pdb: %.c
	@echo PDT parse phase: Creating $@ for $<
	${PDTPARSEC} $< ${CFLAGS} ${INCLUDES}

%-inst.c: %.pdb %.c
	@echo TAU instrumentation phase: Creating $@ from $^
	${TAUINSTR} $^ -o $@


endif


